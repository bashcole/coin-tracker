{
	"info": {
		"_postman_id": "56ee4102-8bfe-4fb7-9a3e-bfd856d32855",
		"name": "Coin Tracker",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "6727862"
	},
	"item": [
		{
			"name": "Price History",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Validate the response\", () => {",
							"    const responseJson = pm.response.json();",
							"    pm.expect(responseJson).to.be.a('object')",
							"    pm.expect(responseJson['data']).to.be.a('array');",
							"",
							"    const firstItem = responseJson['data'][0];",
							"    pm.expect(firstItem.ask).to.be.a('string');",
							"    pm.expect(firstItem.bid).to.be.a('string');",
							"    pm.expect(firstItem.date).to.be.a('string');",
							"",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{URL}}/api/price-history/BTC-USD/1M",
					"host": [
						"{{URL}}"
					],
					"path": [
						"api",
						"price-history",
						"BTC-USD",
						"1M"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get exchange pairs",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Validate the response\", () => {",
							"    const responseJson = pm.response.json();",
							"    pm.expect(responseJson).to.be.a('object')",
							"    pm.expect(responseJson['data']).to.be.a('array');",
							"",
							"    const firstItem = responseJson['data'][0];",
							"    pm.expect(firstItem.icon).to.be.a('string');",
							"    pm.expect(firstItem.color).to.be.a('string');",
							"    pm.expect(firstItem.logo).to.be.a('string');",
							"    pm.expect(firstItem.name).to.be.a('string');",
							"    pm.expect(firstItem.base_symbol).to.be.a('string');",
							"    pm.expect(firstItem.symbol).to.be.a('string');",
							"    pm.expect(firstItem.decimals).to.be.a('number');",
							"    pm.expect(firstItem.ask).to.be.a('string');",
							"",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://127.0.0.1:8000/api/exchange-pairs",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": [
						"api",
						"exchange-pairs"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get currency info",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Validate the response\", () => {",
							"    const responseJson = pm.response.json();",
							"    pm.expect(responseJson).to.be.a('object')",
							"    pm.expect(responseJson['data']).to.be.a('array');",
							"",
							"    const firstItem = responseJson['data'][0];",
							"    pm.expect(firstItem.icon).to.be.a('string');",
							"    pm.expect(firstItem.color).to.be.a('string');",
							"    pm.expect(firstItem.name).to.be.a('string');",
							"    pm.expect(firstItem.symbol).to.be.a('string');",
							"    pm.expect(firstItem.decimals).to.be.a('number');",
							"    pm.expect(firstItem.market_cap).to.be.a('number');",
							"    pm.expect(firstItem.circulating_supply).to.be.a('number');",
							"",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{URL}}/api/currency/BTC",
					"host": [
						"{{URL}}"
					],
					"path": [
						"api",
						"currency",
						"BTC"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create limit",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Validate the response\", () => {",
							"    const responseJson = pm.response.json();",
							"    pm.expect(responseJson).to.be.a('object')",
							"    pm.expect(responseJson['data']).to.be.a('array');",
							"",
							"    const firstItem = responseJson['alert'][0];",
							"    pm.expect(firstItem.id).to.be.a('number');",
							"    pm.expect(firstItem.created_at).to.be.a('string');",
							"    pm.expect(firstItem.updated_at).to.be.a('string');",
							"    pm.expect(firstItem.email).to.be.a('number');",
							"    pm.expect(firstItem.limit).to.be.a('number');",
							"    pm.expect(firstItem.pair_id).to.be.a('number');",
							"",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"sandbox@example.com\",\n    \"limit\": 50000,\n    \"pair_id\": 1\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/api/price-alert/store",
					"host": [
						"{{URL}}"
					],
					"path": [
						"api",
						"price-alert",
						"store"
					]
				}
			},
			"response": []
		}
	]
}